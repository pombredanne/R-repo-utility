!! create tree:
repo/
|-- RPMS
|   `-- entreprise
|       |-- 6
|       |   `-- r-repo
|       |       |-- i386
|       |       |-- noarch
|       |       `-- x86_64
|       `-- 6Server -> 6
|-- SOURCES
`-- SRPMS

!! Script order:
  Rdepgenerator.py -> Generate the files level_*_packages where * is the
iteration number. level_0_packages is therefore the list of packages which
can be built with only R installed (and the packages it provides).
level_1_packages is the list of packages which can be built with R and the
packages built on the level 0, and so on.

  multi_rpm_builder -> text an input file and a given mock_config and run
all the package mentionned in the text file using the given mock configu

  rpm_repo_rebuilder -> takes the same text file as multi_rpm_builder and
the part of a mock config, checks on which arch each of the package
mentionned in the filename are already available (using repoquery) and
rebuild the package for the arch for which the package is not available.

  rpm_rebuilder -> From a given text file containing the package to
update, rebuild the package all arch using the part of the mock_config
provided.

!! Move output from mock build
find /data/mock -name "*.rpm" |wc -l
find /data/mock -name "*.rpm" -exec cp {} /data/rpms/ \;
ll /data/rpms |wc -l
cd /data/rpms/
mv *.noarch.rpm /data/repo/RPMS/entreprise/6/r-repo/noarch/
mv *.x86_64.rpm /data/repo/RPMS/entreprise/6/r-repo/x86_64/
mv *.i686.rpm /data/repo/RPMS/entreprise/6/r-repo/i386/
mv *.src.rpm ~/rpmbuild/SRPMS/

!! Move/Copy RPMs there:
cp ~/rpmbuild/RPMS/noarch/* /data/repo/RPMS/entreprise/6/r-repo/noarch/
cp ~/rpmbuild/RPMS/x86_64/ /data/repo/RPMS/entreprise/6/r-repo/x86_64/

!! Create the repo
cd /data/repo/RPMS/entreprise/6/r-repo/
createrepo noarch
createrepo x86_64
createrepo i386

